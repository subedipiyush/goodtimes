# cloudbuild.yaml for Next.js Frontend Deployment to Cloud Run

steps:
# Step 1: Build the Docker image
# The '.' indicates the Dockerfile is in the current directory.
# The image name uses the PROJECT_ID and includes the COMMIT_SHA for unique tagging.
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/good-times-frontend-nextjs:$COMMIT_SHA', '.']

# Step 2: Push the Docker image to Google Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/good-times-frontend-nextjs:$COMMIT_SHA']

# Step 3: Deploy the image to Cloud Run
# Replace 'your-service-name' with the desired name for your Cloud Run service (e.g., good-times-frontend).
# Replace 'us-central1' with your desired Google Cloud region.
# '--allow-unauthenticated' makes the service publicly accessible.
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  args: [
    'gcloud', 'run', 'deploy', 'good-times',
    '--image', 'gcr.io/$PROJECT_ID/good-times-frontend-nextjs:$COMMIT_SHA',
    '--region', 'us-central1', # Replace with your preferred region
    '--platform', 'managed',
    '--allow-unauthenticated'
  ]
images:
- 'gcr.io/$PROJECT_ID/good-times-frontend-nextjs:$COMMIT_SHA'

options:
  # Define the environment variable for the backend URL during the build/deployment.
  # This makes it available to your Next.js app's build process and runtime.
  # Make sure this matches the NEXT_PUBLIC_BACKEND_BASE_URL you use in page.js
  env:
    - 'NEXT_PUBLIC_BACKEND_BASE_URL=https://goodtimes-369046995463.europe-west1.run.app/'