# root/cloudbuild.yaml
# Orchestrates deployment for both backend and frontend from a single repository.

steps:
# ----------------------------------------------
# STEP 1: Build and Deploy the Python Flask Backend
# ----------------------------------------------
- name: 'gcr.io/cloud-builders/docker'
  id: 'Build Backend Image'
  args:
    - 'build'
    - '-t'
    - 'gcr.io/$PROJECT_ID/goodtimes-backend:$COMMIT_SHA'
    - '.' # Build context is the root of the repository
    - '-f' # Specify Dockerfile location
    - './Dockerfile' # Path to your backend Dockerfile at the root

- name: 'gcr.io/cloud-builders/docker'
  id: 'Push Backend Image'
  args:
    - 'push'
    - 'gcr.io/$PROJECT_ID/goodtimes-backend:$COMMIT_SHA'

- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Deploy Backend to Cloud Run'
  args:
    - 'gcloud'
    - 'run'
    - 'deploy'
    - 'goodtimes-backend' # Your Cloud Run service name for the backend
    - '--image'
    - 'gcr.io/$PROJECT_ID/goodtimes-backend:$COMMIT_SHA'
    - '--region'
    - 'global' # Ensure this matches your desired backend region
    - '--platform'
    - 'managed'
    - '--allow-unauthenticated'

# ----------------------------------------------
# STEP 2: Build and Deploy the Next.js Frontend
# ----------------------------------------------
# Build context for frontend is 'ui/'
- name: 'gcr.io/cloud-builders/docker'
  id: 'Build Frontend Image'
  args:
    - 'build'
    - '-t'
    - 'gcr.io/$PROJECT_ID/goodtimes-frontend:$COMMIT_SHA'
    - './ui' # Build context is the frontend directory
    - '-f' # Specify Dockerfile location within the build context
    - './ui/Dockerfile' # Path to your frontend Dockerfile

- name: 'gcr.io/cloud-builders/docker'
  id: 'Push Frontend Image'
  args:
    - 'push'
    - 'gcr.io/$PROJECT_ID/goodtimes:$COMMIT_SHA'

- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Deploy Frontend to Cloud Run'
  args:
    - 'gcloud'
    - 'run'
    - 'deploy'
    - 'goodtimes-frontend' # Your Cloud Run service name for the frontend
    - '--image'
    - 'gcr.io/$PROJECT_ID/goodtimes-frontend:$COMMIT_SHA'
    - '--region'
    - 'global' # Ensure this matches your desired frontend region
    - '--platform'
    - 'managed'
    - '--allow-unauthenticated'
  # Set environment variables for the frontend during its deployment
  env:
    - 'NEXT_PUBLIC_BACKEND_BASE_URL=https://goodtimes-369046995463.europe-west1.run.app'

images:
  - 'gcr.io/$PROJECT_ID/goodtimes-backend:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/goodtimes-frontend:$COMMIT_SHA'

# Options to apply to all steps
options:
  logging: CLOUD_LOGGING_ONLY # Only log to Cloud Logging, useful for production
  # machineType: 'E2_HIGHCPU_8' # Uncomment for faster builds if needed, adjust machine type as required.

